{"version":3,"sources":["components/CartContext.js","components/Cat.js","components/CatList.js","components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","React","createContext","CartProvider","props","useState","cart","setCart","Provider","value","children","Cat","useContext","className","name","src","image","price","onClick","cat","currentState","CatList","list","map","item","index","url","Cart","totalPrice","reduce","accumulator","current","Math","round","length","App","data","setData","loading","setLoading","useEffect","handleFetch","setTimeout","a","fetch","response","json","i","console","log","element","faker","firstName","Number","commerce","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEaA,EAAcC,IAAMC,gBAEpBC,EAAe,SAACC,GAC3B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,cAACP,EAAYQ,SAAb,CAAsBC,MAAO,CAACH,EAAMC,GAApC,SACGH,EAAMM,YCLAC,EAAM,SAACP,GAClB,MAAwBQ,qBAAWZ,GAAnC,mBAAaO,GAAb,WAMA,OACE,sBAAKM,UAAU,OAAf,UACE,6BAAKT,EAAMU,OACX,qBAAKC,IAAKX,EAAMY,QAChB,sCAAMZ,EAAMa,SACZ,wBAAQC,QATM,WAChB,IAAMC,EAAM,CAAEL,KAAMV,EAAMU,KAAMG,MAAOb,EAAMa,MAAOD,MAAOZ,EAAMY,OACjET,GAAQ,SAAAa,GAAY,4BAAQA,GAAR,CAAsBD,QAOxC,6BCZOE,EAAU,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACvB,OACE,qBAAKT,UAAU,eAAf,SAEIS,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACP,cAAC,EAAD,CAAKX,KAAMU,EAAKV,KAAMG,MAAOO,EAAKP,MAAmBD,MAAOQ,EAAKE,KAAnBD,SCL3CE,EAAO,WAClB,MAAwBf,qBAAWZ,GAAnC,mBAAOM,EAAP,KACMsB,GADN,KACmBtB,EAAKuB,QAAO,SAACC,EAAaC,GAAd,OAA2BC,KAAKC,MAAMH,EAAcC,EAAQd,SAAS,IAEpG,OACE,sBAAKJ,UAAU,OAAf,UACI,wCACA,8BAAG,qDAAH,IAAqCP,EAAK4B,UAC1C,8BAAG,mDAAH,QAAoCN,SCwC7BO,EA1CH,WACV,MAAwB9B,mBAAS,IAAjC,mBAAO+B,EAAP,KAAaC,EAAb,KACA,EAA8BhC,oBAAS,GAAvC,mBAAOiC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,IACAC,YAAW,WACTH,GAAW,KACV,OACF,IAGL,IAAME,EAAW,uCAAG,kCAAAE,EAAA,sEACKC,MAAM,2FADX,cACZC,EADY,gBAICA,EAASC,OAJV,OAMlB,IAFMV,EAJY,OAMTW,EAAI,EAAGA,EAAIX,EAAKF,OAAQa,IAC/BC,QAAQC,IAAIb,IACRc,EAAUd,EAAKW,IACZ,KAAWI,IAAMrC,KAAKsC,YAC7BF,EAAO,MAAYG,OAAOF,IAAMG,SAASrC,SAG3CoB,EAAQD,GAbU,2CAAH,qDAgBf,OAAIE,EAAgB,6CAEhB,eAAC,EAAD,WACE,qBAAKzB,UAAU,QAAf,SACE,4CAEF,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,MAEA,cAAC,EAAD,CAASS,KAAMc,QClCVmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2f8bd483.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport const CartContext = React.createContext();\r\n\r\nexport const CartProvider = (props) => {\r\n  const [cart, setCart] = useState([]);\r\n  return (\r\n    <CartContext.Provider value={[cart, setCart]}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport { CartContext } from './CartContext';\r\n\r\nexport const Cat = (props) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n\r\n  const addToCart = () => {\r\n    const cat = { name: props.name, price: props.price, image: props.image };\r\n    setCart(currentState => [...currentState, cat]);\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>{props.name}</h2>\r\n      <img src={props.image}></img>\r\n      <h3>£{props.price}</h3>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\nimport { Cat } from './Cat';\r\n\r\nexport const CatList = ({list}) => {\r\n  return (\r\n    <div className=\"catContainer\">\r\n      {\r\n        list.map((item, index) => (\r\n          <Cat name={item.name} price={item.price} key={index} image={item.url} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}","import React, {useContext} from 'react';\r\nimport {CartContext} from './CartContext';\r\n\r\nexport const Cart = () => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const totalPrice = cart.reduce((accumulator, current) => (Math.round(accumulator + current.price)), 0);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n        <h2>Basket</h2>\r\n        <p><strong>Items in cart :</strong> {cart.length}</p>\r\n        <p><strong>Total price :</strong> £{totalPrice}</p>\r\n    </div>\r\n  )\r\n}","import './App.css';\nimport React, { useState, useEffect} from \"react\"\nimport faker from \"faker\"\nimport { CatList } from './components/CatList';\nimport { Cart } from './components/Cart';\nimport { CartProvider } from './components/CartContext';\n\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {  \n    handleFetch();\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n// Main render (what is outputted)\nconst handleFetch = async () => {\n  const response = await fetch(\n    `https://api.thecatapi.com/v1/images/search?limit=8&page=1&order=Desc?mime_types=jpg,png`\n  );\n  const data = await response.json();\n\n  for (let i = 0; i < data.length; i++) {\n    console.log(data)\n    let element = data[i];\n    element[\"name\"] = faker.name.firstName()\n    element[\"price\"] = Number(faker.commerce.price())\n  }\n\n  setData(data);\n};\n\n  if (loading) return <h1>Loading ...</h1>\n  return (\n      <CartProvider>\n        <div className=\"title\">\n          <h2>Cats4Lyf</h2>\n        </div>\n        <div className=\"cartContainer\">\n          <Cart />\n        </div>\n          <CatList list={data}/> \n      </CartProvider>\n  )\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}